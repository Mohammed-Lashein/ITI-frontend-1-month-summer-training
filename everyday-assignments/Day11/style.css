body {
  background-color: #E9BCB2;
}

.bg-purple {
  background-color: #a83279;
}

.bg-green {
  background-color: #66e066;
  color: black;
}

.bg-gray {
  background-color: #e0e0e0;
  color: black;
}

/* using css grid */
.my-container {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  /* grid-template-rows: repeat(2, 1fr); */
  padding-top: 5rem;
  /* row-gap: 1rem; */
  row-gap: 0.2rem;
}

.hidden {
  visibility: hidden;
}

.my-container div {
  padding: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  border: 1px solid black;
  /* margin: 0.2rem; */
}

/* using claude's recommendation of using grid-template-areas */
.my-container {
  /* 
    It is important to set the number of rows, otherwise block1 and block2 will be adjacent. 
    Is it mandatory to set the rows number? 
    => In this video by Elzero Web School, he set the rows numbers so I think the answer is yes.
    Link to code from the video: 
    https://elzero.org/css-grid-parent-complete-layout-with-template-areas/
  */
  grid-template-rows: repeat(6, 1fr);
  grid-template-areas:
    "block1 . . ."
    "block1 block2 block2 block2"
    "block3 block3 block6 block7"
    "block3 block3 block6 block8"
    "block4 block5 block6 block9"
    "block4 block5 block6 block9"
  ;
}

.block-1 {
  grid-area: block1;
}

.block-2 {
  grid-area: block2;
}

.block-3 {
  grid-area: block3;
}

.block-4 {
  grid-area: block4;
}

.block-5 {
  grid-area: block5;
}

.block-6 {
  grid-area: block6;
}

.block-7 {
  grid-area: block7;
}

.block-8 {
  grid-area: block8;
}

.block-9 {
  grid-area: block9;
}